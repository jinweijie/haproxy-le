services:
  certbot:
    hostname: certbot
    build:
      context: ./certbot
      dockerfile: ./Dockerfile-certbot
    image: certbot
    container_name: certbot_container
    restart: always
    tty: true # keep container running
    environment:
      - LE_DOMAIN=${LE_DOMAIN}
      - LE_EMAIL=${LE_EMAIL}
    volumes:
      - ./haproxy/certs:/etc/haproxy/certs
      - ./certbot/scripts:/scripts
      - certbot_le_data:/etc/letsencrypt
      - certbot_log:/var/log
    networks:
      - haproxy_le_net

  ofelia:
    container_name: ofelia_container
    image: mcuadros/ofelia:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ofelia/ofelia.ini:/etc/ofelia/config.ini
      - ofelia_log:/var/logs
    networks:
      - haproxy_le_net
    depends_on:
      - certbot
      - haproxy

  rsyslog:
    hostname: rsyslog
    build:
      context: ./rsyslog
      dockerfile: ./Dockerfile-rsyslog
    image: rsyslog-custom
    container_name: rsyslog_container
    restart: always
    networks:
      - haproxy_le_net
    volumes:
      - rsyslog_log:/var/log

  haproxy:
    hostname: haproxy
    image: haproxy:2.5
    container_name: haproxy_container
    restart: always
    depends_on:
      - rsyslog
      - certbot
      - simulation_api
    networks:
      - haproxy_le_net
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./haproxy:/usr/local/etc/haproxy:ro

  simulation_api:    
    hostname: simulation-api
    image: jinweijiedocker/simulation-api:latest
    container_name: simulation_api_container
    networks:
      - haproxy_le_net
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://simulation-api:80", "||", "exit", "1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  certbot_le_data:
    name: certbot_le_data
  certbot_log:
    name: certbot_log
  ofelia_log:
    name: ofelia_log
  rsyslog_log:
    name: rsyslog_log
networks:
  haproxy_le_net:
    name: haproxy_le_net
    driver: bridge
